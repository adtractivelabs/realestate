# Generated by Django 3.2.9 on 2021-12-26 09:33

import ckeditor_uploader.fields
import datetime
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.fields
import django.db.models.manager
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about_logo', models.ImageField(blank=True, null=True, upload_to='about_logo/')),
                ('site_description', models.TextField(max_length=1350)),
                ('vision_text', models.TextField(max_length=1350)),
                ('mission_text', models.TextField(max_length=1350)),
                ('philosophy_text', models.TextField(max_length=1350)),
                ('about_video_link', models.FileField(upload_to='')),
                ('about_phone_no', models.CharField(blank=True, max_length=10, null=True)),
                ('about_email', models.EmailField(blank=True, max_length=30, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'About Us',
            },
        ),
        migrations.CreateModel(
            name='Amenities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amenities_name', models.CharField(blank=True, max_length=250, null=True)),
                ('amenities_charge', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Amenities',
            },
        ),
        migrations.CreateModel(
            name='ApprovedBank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_logo', models.ImageField(null=True, upload_to='bank_name')),
                ('bank_name', models.CharField(blank=True, max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Approved Bank',
            },
        ),
        migrations.CreateModel(
            name='BannerVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_file', models.FileField(upload_to='bank_name')),
                ('video_name', models.CharField(blank=True, max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Banner Video',
            },
        ),
        migrations.CreateModel(
            name='BHKApartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bhk_name', models.CharField(blank=True, max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'BHK/Apartments',
            },
        ),
        migrations.CreateModel(
            name='Builder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('builder_name', models.CharField(blank=True, max_length=250, null=True)),
                ('builder_slug', models.SlugField()),
                ('builder_logo', models.ImageField(upload_to='builder_logo/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Builder',
            },
        ),
        migrations.CreateModel(
            name='Contact_Us',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('phone', models.CharField(blank=True, max_length=10, null=True)),
                ('email', models.EmailField(max_length=25, unique=True)),
                ('purpose', models.CharField(blank=True, max_length=300, null=True)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Contact Us',
            },
        ),
        migrations.CreateModel(
            name='EmailNewsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_update', models.CharField(blank=True, max_length=250, null=True)),
                ('subject', models.CharField(blank=True, max_length=250, null=True)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Email Update',
            },
        ),
        migrations.CreateModel(
            name='Enquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('phone', models.CharField(blank=True, max_length=10, null=True)),
                ('email', models.EmailField(max_length=25, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Enquiries',
            },
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=260, null=True)),
                ('phone', models.CharField(blank=True, max_length=260, null=True)),
                ('email', models.EmailField(blank=True, max_length=260, null=True)),
                ('location_name', models.CharField(blank=True, max_length=260, null=True)),
                ('project_name', models.CharField(blank=True, max_length=260, null=True)),
                ('property_name', models.CharField(blank=True, max_length=260, null=True)),
                ('property_plan_to_by', models.DateTimeField()),
                ('property_unit_price', models.CharField(blank=True, max_length=260, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Lead Genration',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(blank=True, max_length=250, null=True)),
                ('location_area', models.CharField(blank=True, max_length=250, null=True)),
                ('location_pincode', models.CharField(blank=True, max_length=6, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Location',
            },
        ),
        migrations.CreateModel(
            name='NewsLetter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=30, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'News Letters',
            },
        ),
        migrations.CreateModel(
            name='Testimonials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('testo_client_image', models.ImageField(blank=True, null=True, upload_to='testo/')),
                ('testo_name', models.CharField(blank=True, max_length=250, null=True)),
                ('testo_email', models.CharField(max_length=30, null=True)),
                ('testo_phone', models.CharField(max_length=15, null=True)),
                ('testo_desc', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('testo_locations', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rportal.location')),
            ],
            options={
                'verbose_name_plural': 'Testimonials',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=250)),
                ('create_date', models.DateTimeField(default=datetime.datetime.now)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('role_permission', models.ManyToManyField(to='auth.Permission')),
            ],
            options={
                'verbose_name_plural': 'Roles',
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_name', models.CharField(blank=True, max_length=250, null=True)),
                ('property_image', models.ImageField(upload_to='properties_images/')),
                ('property_floor', models.IntegerField(default=1)),
                ('property_type', models.CharField(blank=True, choices=[('commercial', 'COMMERCIAL'), ('private', 'PRIVATE')], max_length=75, null=True)),
                ('property_construction', models.CharField(blank=True, choices=[('under_construction', 'UNDER CONSTRUCTION'), ('compeleted', 'COMPLETED'), ('developing', 'DEVELOPING')], max_length=75, null=True)),
                ('property_area_sq_ft', models.CharField(blank=True, max_length=250, null=True)),
                ('property_description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('property_slug', models.SlugField()),
                ('property_price', models.CharField(blank=True, max_length=250, null=True)),
                ('is_exclusive', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('builder_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='builder_properties', to='rportal.builder')),
                ('property_amenities', models.ManyToManyField(blank=True, to='rportal.Amenities')),
                ('property_bhk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.fields.CharField, to='rportal.bhkapartment')),
                ('property_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rportal.location')),
            ],
            options={
                'verbose_name_plural': 'Property Listing',
            },
        ),
        migrations.CreateModel(
            name='PropertiesImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_image', models.ImageField(null=True, upload_to='properties_collective_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('builder_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rportal.builder')),
                ('property_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rportal.property')),
            ],
            options={
                'verbose_name_plural': 'Property Images',
            },
        ),
        migrations.AddField(
            model_name='builder',
            name='builder_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rportal.location'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(db_index=True, max_length=255, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('password', models.CharField(db_index=True, max_length=255, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('mobile_number', models.CharField(max_length=12)),
                ('profile_image', models.ImageField(default='img/profile.png', upload_to='profile/')),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('role', models.ManyToManyField(related_name='user_role', to='rportal.Role')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'User',
            },
            managers=[
                ('object', django.db.models.manager.Manager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
